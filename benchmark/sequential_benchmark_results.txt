# to speed_concurrence.py
# doing 10000 fetches
# final num=2845218640
# ./client_seq.py  0.51s user 0.68s system 33% cpu 3.600 total
#
# to speed_tornado.py
# doing 10000 fetches
# final num=2845218640
# ./client_seq.py  0.56s user 0.66s system 27% cpu 4.372 total
#
# to speed_concurrence.py with greenlet and Python 2.5
# doing 10000 fetches
# final num=2845218640
# ./client_seq.py  0.45s user 0.66s system 27% cpu 3.972 total
#
# to speed_syncless.py
# doing 10000 fetches
# final num=2845218640
# ./client_seq.py  0.50s user 0.56s system 44% cpu 2.353 total
#
# to speed_concurrence_wsgi.py
# doing 10000 fetches
# final num=2845218640
# ./client_seq.py  0.60s user 0.64s system 15% cpu 8.099 total
#
# to speed_syncless_wsgi.py
# doing 10000 fetches
# final num=2845218640
# ./client_seq.py  0.56s user 0.57s system 32% cpu 3.526 total
#
# to speed_eventlet_wsgi.py
# doing 10000 fetches
# final num=2845218640
# ./client_seq.py  0.56s user 0.66s system 17% cpu 6.932 total
#
# to speed_eventlet.py
# doing 10000 fetches
# final num=2845218640
# ./client_seq.py  0.45s user 0.59s system 28% cpu 3.588 total

# to speed_concurrence_wsgi.py with greenlet and Python 2.5
# doing 10000 fetches
# final num=2845218640
# ./client_seq.py  0.39s user 0.68s system 10% cpu 10.380 total

# to speed_node_js.js
# doing 10000 fetches
# final num=2845218640
# ./client_seq.py  0.49s user 0.68s system 40% cpu 2.898 total

# --- on pax:

# to speed_syncless_wsgi.js
# time ./client_seq.py 
# doing 10000 fetches
# final num=2845218640
# real	0m4.698s user	0m0.608s sys	0m1.044s

# to speed_gevent_wsgi.js
# doing 10000 fetches
# final num=2845218640
# real	0m4.466s user	0m0.828s sys	0m0.948s

# to speed_gevent_wsgi.js with greenlet, python2.5
# doing 10000 fetches
# final num=2845218640
# real	0m3.975s user	0m0.704s sys	0m0.952s
# surprise: greenlet is faster here (not emulated by stackless)

# to speed_eventlet_wsgi.js with greenlet, python2.5
# doing 10000 fetches
# final num=2845218640
# real	0m8.029s user	0m0.744s sys	0m0.988s
